from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, WebAppInfo
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import json

# –ó–∞–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π
TOKEN = '7269073941:AAFwoUkGpUfa1XK8b_4xvxZEkU8XE4MRWlI'
print("–§–∞–π–ª —Ä–µ–∞–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!")

def load_bartenders():
    with open("/Users/zanadzigitov/Desktop/bottg/bartenders.json", "r", encoding="utf-8") as f:
        return json.load(f)["bartenders"]

def save_bartenders(data):
    with open("/Users/zanadzigitov/Desktop/bottg/bartenders.json", "w", encoding="utf-8") as f:
        json.dump({"bartenders": data}, f, ensure_ascii=False, indent=2)

def set_bartender_id(name, chat_id):
    print(f"[DEBUG] –°–æ—Ö—Ä–∞–Ω—è—é chat_id {chat_id} –¥–ª—è –±–∞—Ä–º–µ–Ω–∞ {name}")
    bartenders = load_bartenders()
    for b in bartenders:
        if b["name"] == name:
            b["id"] = chat_id
            break
    save_bartenders(bartenders)

def set_current_bartender(name):
    bartenders = load_bartenders()
    for b in bartenders:
        b["on_shift"] = False  # –°–Ω–∏–º–∞–µ–º –≤—Å–µ—Ö –±–∞—Ä–º–µ–Ω–æ–≤ —Å–æ —Å–º–µ–Ω—ã
        if b["name"] == name:
            b["on_shift"] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–º–µ–Ω—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –±–∞—Ä–º–µ–Ω–∞
    save_bartenders(bartenders)

def get_current_bartender():
    bartenders = load_bartenders()
    for b in bartenders:
        if b["on_shift"]:
            return b
    return None

def start(update: Update, context: CallbackContext):
    # –£–∫–∞–∂–∏ –∑–¥–µ—Å—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π WebApp (–ª–æ–∫–∞–ª—å–Ω—É—é –∏–ª–∏ —Ä–∞–∑–º–µ—â—ë–Ω–Ω—É—é)
    webapp_url = 'https://zhanaddzhigitov.github.io/menu2/'
    keyboard = [
        [KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", web_app=WebAppInfo(url=webapp_url))]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é:", reply_markup=reply_markup)

def handle_webapp_data(update: Update, context: CallbackContext):
    order = update.message.web_app_data.data
    update.message.reply_text(f"‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω:\n\n{order}")
    current_bartender = get_current_bartender()
    if current_bartender and current_bartender["id"]:
        context.bot.send_message(chat_id=current_bartender["id"], text=f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n\n{order}")
    else:
        update.message.reply_text("‚ö†Ô∏è –ù–µ—Ç –±–∞—Ä–º–µ–Ω–∞ –Ω–∞ —Å–º–µ–Ω–µ. –ó–∞–∫–∞–∑ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

def start_shift(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏ –∏–º—è –±–∞—Ä–º–µ–Ω–∞: /shift –ó—É–±–∞–∏—Ä")
        return

    name = " ".join(context.args)
    bartenders = load_bartenders()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    bartender = next((b for b in bartenders if b["name"] == name), None)
    if not bartender:
        update.message.reply_text(f"‚ö†Ô∏è –ë–∞—Ä–º–µ–Ω —Å –∏–º–µ–Ω–µ–º {name} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è.")
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞—Ä–º–µ–Ω–∞ –Ω–∞ —Å–º–µ–Ω—É
    set_current_bartender(name)
    set_bartender_id(name, update.effective_chat.id)

    print(f"[DEBUG] –ë–∞—Ä–º–µ–Ω {name} –ø–æ–ª—É—á–∏–ª chat_id {update.effective_chat.id}")
    update.message.reply_text(f"‚úÖ –ë–∞—Ä–º–µ–Ω {name} —Ç–µ–ø–µ—Ä—å –Ω–∞ —Å–º–µ–Ω–µ.")

def end_shift(update: Update, context: CallbackContext):
    current_bartender = get_current_bartender()
    if not current_bartender:
        update.message.reply_text("‚ö†Ô∏è –ù–∏–∫—Ç–æ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å–º–µ–Ω–µ.")
        return

    # –°–Ω–∏–º–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –±–∞—Ä–º–µ–Ω–∞ —Å–æ —Å–º–µ–Ω—ã
    bartenders = load_bartenders()
    for b in bartenders:
        if b["name"] == current_bartender["name"]:
            b["on_shift"] = False
            break
    save_bartenders(bartenders)

    update.message.reply_text(f"‚úÖ –ë–∞—Ä–º–µ–Ω {current_bartender['name']} –≤—ã—à–µ–ª —Å–æ —Å–º–µ–Ω—ã.")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("shift", start_shift))
    dp.add_handler(CommandHandler("end_shift", end_shift))
    dp.add_handler(MessageHandler(Filters.status_update.web_app_data, handle_webapp_data))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
